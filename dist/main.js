(()=>{"use strict";var e={};function t(e){const t=e.target.matches("[data-dropdown-button]");if(!t&&null!=e.target.closest("[data-dropdown]"))return;let n;t&&(function(e){const t=e.target.closest(".edit-container");if(null!=e.target.closest(".tile")){const e=document.querySelector("#project-option");e.classList.remove("hidden"),t.appendChild(e)}else if(null!=e.target.closest("li")){const e=document.getElementById("list-option");e.classList.remove("hidden"),t.appendChild(e)}}(e),n=e.target.closest("[data-dropdown]"),setTimeout((function(){n.classList.toggle("active")}),0)),document.querySelectorAll("[data-dropdown].active").forEach((e=>{e!==n&&e.classList.remove("active")}))}function n(e){let t=e.target.parentNode.parentNode,n=t.parentNode;c(t),!0==!document.querySelector("#rename-form").classList.contains("hidden")&&(l(),r()),function(e){const t=e.parentNode,n=document.getElementById("rename-form");let c=e.querySelector(".project-name").textContent;n.querySelector("input").value=c,t.insertBefore(n,e)}(n),function(){const e=document.querySelector("#rename-form");setTimeout((()=>{e.classList.remove("hidden")}),0)}(),document.querySelector(".project-rename-input").focus(),n.classList.add("hidden")}function c(e){e.classList.remove("active")}function o(e){let t=e.target.closest(".tile"),n=t.dataset.project;if(t.classList.contains("selected")){const e=document.querySelector("#today"),t=e.querySelector("[data-name]");e.classList.add("selected"),m(t)}d(),t.remove(),function(){let e=0;document.querySelectorAll(".project .tile").forEach((t=>{let n=t.dataset.project;t.dataset.project=e,y[n].dataProject=e,e++})),y.sort(((e,t)=>e.dataProject-t.dataProject)),S()}(),y.splice(n,1),S()}function d(){const e=document.getElementById("project-option");e.classList.add("hidden"),document.querySelector(".project").appendChild(e);const t=document.querySelector("#list-option");t.classList.add("hidden"),document.querySelector(".list-todo").appendChild(t)}function l(){const e=document.getElementById("rename-form"),t=document.querySelector(".project");e.classList.add("hidden"),t.appendChild(e)}function r(){document.querySelector("div.hidden").classList.remove("hidden")}function s(e){return y.reduce(((t,n)=>{let c=n.taskList.find((t=>t.id==e));return null!=c&&(t=c),t}),{})}function i(){const e=document.querySelector("#list-form"),t=document.querySelector("#list-input"),n=document.querySelector("#list-input-detail"),c=document.querySelector("#list-input-date");e.classList.add("hidden"),t.value="",n.value="",c.value=""}(e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})})(e);let a=Number(localStorage.getItem("currentId"))||0;function u(e){document.querySelector("ul").textContent="",y[e].taskList.forEach((e=>{p(e.id,e.title,e.details,e.date,e.completed,e.important)}))}function m(e){document.querySelector(".title").textContent=e.textContent}function p(e,t,n,c,o,d){const l=document.querySelector("ul"),r=document.createElement("li");r.id=e,l.appendChild(r);const s=document.createElement("div");s.classList.add("unchecked"),r.appendChild(s);const i=document.createElement("div");i.classList.add("list-details"),r.appendChild(i),o&&(s.classList.toggle("checked"),i.classList.toggle("line-through"),i.classList.toggle("fade"));const a=document.createElement("div");a.classList.add("task-title"),a.textContent=t,i.appendChild(a);const u=document.createElement("div");u.classList.add("task-details"),u.textContent=n,i.appendChild(u);const m=document.createElement("div");m.classList.add("date"),m.textContent=c,r.appendChild(m);const p=document.createElement("div");p.classList.add("list-right"),r.appendChild(p);const f=g("star_outline");f.classList.add("star-outline"),p.appendChild(f);const y=g("star");y.classList.add("important"),p.appendChild(y),d?f.classList.add("list-hidden"):y.classList.add("list-hidden");const S=document.createElement("div");S.dataset.dropdown="",S.classList.add("edit-container"),p.appendChild(S);const h=g("more_vert");h.dataset.dropdownButton="",S.appendChild(h)}function f(e){let t;return t=e||"No due date",t}let y=localStorage.getItem("myProjectList");function S(){localStorage.setItem("myProjectList",JSON.stringify(y)),localStorage.setItem("currentId",a.toString())}function h(e,t){const n=document.querySelector(".project"),c=document.querySelector("#project-form"),o=document.createElement("div");o.setAttribute("data-project",`${e}`),o.classList.add("tile","data-tile"),n.insertBefore(o,c);const d=g("menu");d.setAttribute("data-drag",""),o.appendChild(d);const l=document.createElement("div");l.classList.add("project-info"),o.appendChild(l);const r=document.createElement("div");r.classList.add("project-name"),r.textContent=t,l.appendChild(r);const s=document.createElement("div");s.classList.add("edit-container"),s.setAttribute("data-dropdown",""),o.appendChild(s);const i=g("more_vert");i.setAttribute("data-dropdown-button",""),s.appendChild(i)}function g(e){const t=document.createElement("span");return t.classList.add("material-icons-round"),t.textContent=e,t}y=JSON.parse(y||JSON.stringify([]));const L=()=>document.querySelectorAll("[data-project]").length;const v=(e,t)=>{const n=[];return{dataProject:e,name:t,taskList:n,taskNum:n.length}};function q(){const e=document.querySelector("#project-form");document.querySelector("#project-input").value="",e.classList.add("hidden")}function j(e){document.querySelector(".selected").classList.remove("selected"),e.classList.add("selected")}document.querySelector(".project-cancel-btn").addEventListener("click",q),document.querySelector("#add-project").addEventListener("click",(function(){document.getElementById("project-form").classList.remove("hidden"),document.getElementById("project-input").focus()})),document.querySelector("#project-form").addEventListener("submit",(function(e){e.preventDefault();let t=document.querySelector("#project-input").value,n=L();const c=v(n,t);y.push(c),S(),h(n,t),q()})),document.querySelector(".left-panel").addEventListener("click",(function(e){let t=e.target.closest(".home .tile"),n=e.target.closest(".project .tile");if(null!=t){const e=t.querySelector("[data-name]");j(t),d(),m(e),document.querySelector("#add-list").classList.add("hidden")}else{if(null==n)return;{const e=n.querySelector(".project-name");let t=n.dataset.project;d(),u(t),j(n),m(e),document.getElementById("add-list").classList.remove("hidden")}}})),y.forEach((e=>{h(e.dataProject,e.name)})),document.querySelector("#add-list").addEventListener("click",(function(){document.querySelector("#list-form").classList.remove("hidden"),document.querySelector("#list-input").focus()})),document.querySelector(".list-cancel-btn").addEventListener("click",i),document.querySelector("#list-form").addEventListener("submit",(function(e){e.preventDefault();let t=document.querySelector("#list-input").value,n=document.querySelector("#list-input-detail").value,c=document.querySelector("#list-input-date").value,o=document.querySelector(".selected").dataset.project,d=f(c),l=a;const r=function(e,t,n,c,o,d,l){return{dataProject:e,id:t,title:n,details:c,completed:!1,important:!1,date:l}}(o,l,t,n,0,0,d);y[o].taskList.push(r),a++,S(),p(l,t,n,d),i()})),document.querySelector(".list-todo").addEventListener("click",(function(t){let n=t.target.matches(".star-outline"),o=t.target.matches(".unchecked"),l=t.target.matches(".edit-list-submit-btn"),r=(t.target.matches(".edit-list-cancel-btn"),t.target.matches("#list-delete")),i=t.target.matches("#list-edit");n?(function(e){e.target.classList.toggle("list-hidden"),e.target.nextElementSibling.classList.toggle("list-hidden")}(t),function(e){let t=s(e.target.closest("li").id);t.important=!t.important,S()}(t)):o?(function(e){let t=e.target,n=e.target.closest("li").querySelector(".list-details");n.classList.toggle("line-through"),n.classList.toggle("fade"),t.classList.toggle("checked")}(t),function(e){let t=s(e.target.closest("li").id);t.completed=!t.completed,S()}(t)):r?function(e){let t=e.target.closest("li"),n=s(t.id),c=n.dataProject;y[c].taskList=y[c].taskList.filter((e=>e!=n)),S(),d(),t.remove()}(t):i?function(e){c(e.target.parentNode.parentNode),function(e){const t=e.target.closest("li");let n=t.parentNode;const c=document.getElementById("edit-list-form"),o=t.querySelector(".task-title").textContent,d=t.querySelector(".task-details").textContent,l=t.querySelector(".date").textContent,r=c.querySelector("#edit-list-title"),s=c.querySelector("#edit-list-details"),i=c.querySelector("#edit-list-date");r.value=o,s.value=d,i.value=l,t.classList.add("hidden"),c.classList.remove("hidden"),n.insertBefore(c,t)}(e)}(t):l&&function(t){let n=document.querySelector("#edit-list-title").value,c=document.querySelector("#edit-list-details").value,o=document.querySelector("#edit-list-date").value,l=s(document.querySelector("li.hidden").id);l.title=n,l.details=c,l.date=f(o),S(),d(),document.querySelector("li.hidden").classList.remove("hidden"),function(t){const n=document.querySelector(".selected");if(null!=n.closest(".project"))u(t);else{if(null==n.closest(".home"))return;(0,e.checkWhichHomeTile)(n)}}(l.dataProject),t.preventDefault()}(t)})),function(){document.addEventListener("click",t);const e=document.querySelector(".project .option");e.firstElementChild.addEventListener("click",n),e.lastElementChild.addEventListener("click",o),document.querySelector(".rename-rename-btn").addEventListener("click",(e=>{!function(e){e.preventDefault();const t=document.querySelector(".project .tile.hidden");let n=document.querySelector(".project-rename-input").value;const c=t.querySelector(".project-name");c.textContent=n;let o=t.dataset.project;y[o].name=n,S(),r(),m(c),l()}(e),e.preventDefault()})),document.querySelector(".rename-cancel-btn").addEventListener("click",(()=>{l(),r()}))}(),document.querySelector(".hidden-menu").addEventListener("click",(()=>{document.querySelector(".left-panel").classList.toggle("hidden")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,