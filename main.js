(()=>{"use strict";function e(e){document.querySelector(".title").textContent=e.textContent}function t(){}let n=localStorage.getItem("myProjectList");function c(e,t){const n=document.querySelector(".project"),c=document.querySelector("#project-form"),r=document.createElement("div");r.setAttribute("data-project",`${e}`),r.classList.add("tile","data-tile"),n.insertBefore(r,c);const d=o("menu");d.setAttribute("data-drag",""),r.appendChild(d);const a=document.createElement("div");a.classList.add("project-info"),r.appendChild(a);const s=document.createElement("div");s.classList.add("project-name"),s.textContent=t,a.appendChild(s);const l=document.createElement("div");l.classList.add("edit-container"),l.setAttribute("data-dropdown",""),r.appendChild(l);const i=o("more_vert");i.setAttribute("data-dropdown-button",""),l.appendChild(i)}function o(e){const t=document.createElement("span");return t.classList.add("material-icons-round"),t.textContent=e,t}n=JSON.parse(n||JSON.stringify([]));const r=()=>document.querySelectorAll("[data-project]").length;const d=(e,t)=>{const n=[];return{dataProject:e,name:t,taskList:n,taskNum:n.length}};function a(){const e=document.querySelector("#project-form");document.querySelector("#project-input").value="",e.classList.add("hidden")}function s(e){document.querySelector(".selected").classList.remove("selected"),e.classList.add("selected")}document.querySelector(".project-cancel-btn").addEventListener("click",a),document.querySelector("#add-project").addEventListener("click",(function(){document.getElementById("project-form").classList.remove("hidden"),document.getElementById("project-input").focus()})),document.querySelector("#project-form").addEventListener("submit",(function(e){e.preventDefault();let o=document.querySelector("#project-input").value,s=r();const l=d(s,o);n.push(l),localStorage.setItem("myProjectList",JSON.stringify(n)),localStorage.setItem("currentId",t.toString()),c(s,o),a()})),document.querySelector(".left-panel").addEventListener("click",(function(t){let n=t.target.closest(".home .tile"),c=t.target.closest(".project .tile");if(null!=n){const t=n.querySelector("[data-name]");s(n),e(t),document.querySelector("#add-list").classList.add("hidden")}else{if(null==c)return;{const t=c.querySelector(".project-name");c.dataset.project,s(c),e(t)}}})),n.forEach((e=>{c(e.dataProject,e.name)})),document.querySelector(".hidden-menu").addEventListener("click",(()=>{document.querySelector(".left-panel").classList.toggle("hidden")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,